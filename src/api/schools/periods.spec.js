// Generated by CoffeeScript 1.6.3
var Period, School, Stage, app, async, mongoose, request, should;

mongoose = require("mongoose");

async = require("async");

should = require("should");

request = require("supertest");

app = require("../../server");

School = mongoose.model('School');

Stage = mongoose.model('Stage');

Period = mongoose.model('Period');

describe("Period API", function() {
  var url;
  url = "http://localhost:3000";
  before(function(done) {
    this.school = new School({
      name: "Test 1",
      stages: [
        {
          name: "Stage 1"
        }, {
          name: "Stage 2"
        }
      ]
    });
    return this.school.save(function(err) {
      should.not.exist(err);
      return done();
    });
  });
  describe("POST /schools/:id/stages/:id/periods", function() {
    return it("should creates a new Period into a Stage within an existing School", function(done) {
      var period,
        _this = this;
      period = {
        name: "Period 1"
      };
      return request(url).post("/api/schools/" + this.school._id + "/stages/" + this.school.stages[0]._id + "/periods").send(period).expect('Content-Type', /json/).expect(200).end(function(err, res) {
        var stage_added;
        if (err) {
          throw err;
        }
        stage_added = res.body[0];
        stage_added.should.have.property('_id');
        stage_added.name.should.equal('Period 1');
        stage_added.createdAt.should.not.equal(null);
        return done();
      });
    });
  });
  return after(function(done) {
    return mongoose.connection.db.dropCollection("schools", function(err) {
      if (err) {
        done(err);
      }
      return done();
    });
  });
});

// Generated by CoffeeScript 1.6.3
var School, Stage, app, async, mongoose, request, should;

mongoose = require("mongoose");

async = require("async");

should = require("should");

request = require("supertest");

app = require("../../server");

School = mongoose.model('School');

Stage = mongoose.model('Stage');

describe("Stage API", function() {
  var url;
  url = "http://localhost:3000";
  before(function(done) {
    this.school = new School({
      name: "Test 1"
    });
    return this.school.save(function(err) {
      should.not.exist(err);
      return done();
    });
  });
  describe("POST /schools/:id/stages", function() {
    it("should creates a new Stage into an existing School", function(done) {
      var stage,
        _this = this;
      stage = {
        name: "Stage 1"
      };
      return request(url).post("/api/schools/" + this.school._id + "/stages").send(stage).expect('Content-Type', /json/).expect(200).end(function(err, res) {
        var stage_added;
        if (err) {
          throw err;
        }
        stage_added = res.body[0];
        stage_added.should.have.property('_id');
        stage_added.name.should.equal('Stage 1');
        stage_added.createdAt.should.not.equal(null);
        return done();
      });
    });
    return it("should not create a new Stage without name in an existing School", function(done) {
      var stage,
        _this = this;
      stage = {
        name: ""
      };
      return request(url).post("/api/schools/" + this.school._id + "/stages").send(stage).expect('Content-Type', /json/).expect(400).end(function(err, res) {
        if (err) {
          throw err;
        }
        return done();
      });
    });
  });
  return after(function(done) {
    return mongoose.connection.db.dropCollection("schools", function(err) {
      if (err) {
        done(err);
      }
      return done();
    });
  });
});
